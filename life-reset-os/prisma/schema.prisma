// Life Reset OS Database Schema
// Daily reflection + AI suggestions + Notion sync

generator client {
  provider = "prisma-client"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  dailyLogs     DailyLog[]
  goals         Goal[]
  mindReframe   MindReframe[]
  growthPlan    GrowthPlan[]
  weeklyReviews WeeklyReview[]
  tasks         Task[]

  @@map("users")
}

model DailyLog {
  id                   String   @id @default(cuid())
  userId               String
  date                 DateTime
  morningActivities    String?  // JSON string
  afternoonActivities  String?  // JSON string
  nightActivities      String?  // JSON string
  feelings             String?  // JSON string
  aiRecommendations    String?  // JSON string
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("daily_logs")
}

model Goal {
  id             String   @id @default(cuid())
  userId         String
  tenYearGoal    String?
  oneYearGoal    String?
  threeMonthGoal String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("goals")
}

model MindReframe {
  id        String   @id @default(cuid())
  userId    String
  dontWant  String?
  want      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("mind_reframe")
}

model GrowthPlan {
  id           String   @id @default(cuid())
  userId       String
  skillsNeeded String?
  distractions String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("growth_plan")
}

model WeeklyReview {
  id            String   @id @default(cuid())
  userId        String
  weekStart     DateTime
  wentWell      String?
  notWell       String?
  gratitude     String?
  goal          String?
  focusProjects String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("weekly_reviews")
}

model Task {
  id          String   @id @default(cuid())
  userId      String
  date        DateTime
  title       String
  description String?
  completed   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("tasks")
}
